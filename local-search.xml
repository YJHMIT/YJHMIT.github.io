<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>logistic回归算法</title>
    <link href="/2020/07/21/logsitic/"/>
    <url>/2020/07/21/logsitic/</url>
    
    <content type="html"><![CDATA[<p>#7-21</p><p>logsitic算法实际是一种分类算法。比如在监督学习中某些有固定标准的分类。是否垃圾邮件，是否恶性肿瘤….</p><p>有新形式的假设函数引入<img src="/2020/07/21/logsitic/1.jpg" alt></p><p>这里介绍一个新定义，决策界限，就是已知的分类条件演化出的边界。<img src="/2020/07/21/logsitic/2.jpg" alt></p><p>代价函数(cost function)<br><img src="/2020/07/21/logsitic/4.jpg" alt><img src="/2020/07/21/logsitic/3.jpg" alt></p><p>要计算出J(θ)以及其偏导，如果采用梯度下降法，则产生这样的公式<img src="/2020/07/21/logsitic/6.jpg" alt></p><p>如果不需要自己编写算法测试收敛性的话，这里提供到一些<strong>高级算法</strong>来求解这两个值。<strong>共轭梯度法</strong>（BFGS）和L-BFGS（限制变尺度法）。他们拥有一个智能的内部循环称为<strong>线性搜索算法</strong>，所以不需要alpha。比梯度下降快很多。但是非常复杂。在Octave中，我们采用了如图两段代码来计算J(θ）的最小值。<strong>fminunc</strong>是无约束最小化函数。此时的θ至少是一个二维向量或者更大。 要了解如何调用以及参数含义。<br><img src="/2020/07/21/logsitic/5.jpg" alt></p><p>如果附带上Octave里的这种择优计算方法的实例的话，就应该是这样<img src="/2020/07/21/logsitic/4.png" alt></p><p>线性回归的一对多问题：针对每一个类别做一个伪训练集，选择其中之一为正样本，其他均为负样本，得到一条决策界限。将每个结果类别都以此方法训练一次（即y=i的情况各出现一次），带入x的值，看此时的h（也就是假设概率谁最大），则我们可以预测y就是这个值，不管他是什么类别的y。<img src="/2020/07/21/logsitic/7.jpg" alt></p>]]></content>
    
    
    <categories>
      
      <category>Mmachine Learning</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ML base</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>多元线性拟合以及Octave的使用</title>
    <link href="/2020/07/21/task2/"/>
    <url>/2020/07/21/task2/</url>
    
    <content type="html"><![CDATA[<p>#07-19</p><p>进阶学习，上一篇笔记介绍了n，n个特征变量的情况较为复杂，以x(i)来表示特征量，则产生与之相匹配的的seta（i),假设出x(0)恒等于1，则我们得到两个向量集，此时的假设函数h就可以写成，x的转置乘以seta的向量集。</p><p>代价函数的表达形式也出现相应的变化。</p><p>此处介绍一个特征选择方法，比如已知frontage和deepth，我们可以直接把两个特征量转化为area一个特征量，即可实现减少特征量的目的，通过除以max，可以使得特征归一，就是特征量的数据在同一个范围内。不使用特征缩放会导致梯度下降很难运行。</p><p>也可以使用特征归一化。或者调整学习速率alpha，每一次的迭代都造成seta（j）减小，直至最小值。当alpha大于期望的alpha，导致轮廓图上升或者震荡。当下降梯度过于缓慢可以适当增加alpha的值。</p><p>多项式回归，会遇到变量的高次问题以及各类函数进行拟合。</p><p>总结一下就是，<strong>单变量拟合入多元线性模型，高次函数拟合，特征变量归一</strong>。<img src="/2020/07/21/task2/2.jpg" alt></p><p>正规方程可以直接求解seta，可以不使用梯度下降。要注意在这个使用过程中，x是一个m*(n+1)的矩阵，与之前的引入x(0)=1相对应。</p><p>梯度下降需要选择alpha，需要多次迭代，但在n较大时也可以使用，适用于各类模型。</p><p>正规方程不要alpha，一次运算就可以，但是n较大时不好用（n&gt;10000).</p><p><img src="/2020/07/21/task2/3.jpg" alt></p><p>接下来介绍了Octave的语法即使用，<strong>它非常像Linux和python的结合版</strong>，如果之前有Linux的经验会好一些。我只划分板块复习使用：1.矩阵向量的基础表示  2.数据的移动和保存  3.数据的计算   4.可视化矩阵   5.for /while/ do while </p>]]></content>
    
    
    <categories>
      
      <category>Mmachine Learning</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ML base</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ML初识</title>
    <link href="/2020/07/16/task/"/>
    <url>/2020/07/16/task/</url>
    
    <content type="html"><![CDATA[<p>#7-16</p><p>有些略微意外并且突然的进入了py暑期实践，虽然本身是活动室py组的人，但貌似前半年的方向一直落在后端开发上了。</p><p>我更喜欢自由度高一些的组织，所以之前的某些项目组跟我的时间安排和生活安排冲突了。导致了退出的后果，然后就是之前一直想尝试的机器学习和AI终于还是上手了。</p><p>期待这段新的旅途…</p><p>1.ML某种方面上的定义，samuel表示这是一种不需要详细精确代码就可以实现学习的功能，Tom认为至少分为三部分，EPT，experience反馈给task，得到相应的举动和可能性反馈performance measure。</p><p>基本分类：监督学习（supervised learning）和无监督学习（unsupervised learning）。监督学习意味着，有固定的标准和情况来对当下的数据整体进行区分，而无监督学习意味着没有标准，单纯拥有数据体的情况下，对已有的数据体按照可能的组群进行划分。</p><p>监督学习分为，回归型（给出相应的函数曲线拟合数据）和离散分类型（依照标准分为不同的种类）。无监督学习分为，聚类算法（内部划分族群）和鸡尾酒会算法（分离数据）。</p><p>2.我们采用m表示训练样本，x表示输入量，y表示输出量/目标变量。使用（x,y)表示训练样本（training example）。在之后的课程中增加了n，表示模型所拥有的特征量。</p><p>3.第一个ML模型，单变量线性回归模型，明确部分定义：假设函数h，代价函数J，批处理梯度下降是第一个算法。在处理线性回归问题的时候，平方误差代价函数是最常用也是最实用的，批处理梯度下降也是最常用的算法。通常会根据选择的模型参数来画出轮廓图。</p><p>公式给在纸质笔记里了（电脑还是没有笔来的舒服，如果拥有iPad我还能这样？<img src="/2020/07/16/task/1.jpg" alt>顺手把偏导的式子推了一下，确实记忆深刻一些。</p><p>4.凄惨的软工同学并没有学过线代啊这？所以就又听了一波线代的课。 很多问题转化至向量或者矩阵就非常实用。省去了for循环的麻烦，当然矩阵的转置也应当熟悉。</p><p>第一个周的内容不是很多，大部分是能理解的，所以没有写很详细的笔记了，只有些纸质的潦草版。</p><p><strong>复制这段内容后打开百度网盘手机App，操作更方便哦 链接:<a href="https://pan.baidu.com/s/1ZoCzRHPhTQv-OoRhtpzN1Q" target="_blank" rel="noopener">https://pan.baidu.com/s/1ZoCzRHPhTQv-OoRhtpzN1Q</a> 提取码:880c</strong></p>]]></content>
    
    
    <categories>
      
      <category>Mmachine Learning</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ML base</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>back</title>
    <link href="/2020/07/16/back/"/>
    <url>/2020/07/16/back/</url>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="输入密码吧皮卡丘！" /><label>输入密码吧皮卡丘！</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="cf8717d779351545d7d832f9bf920127fb10669a2738e5d8b6c10e14dcf86a1a">88f679ecb68eb1917ecf5e4686587c011b611a7fe46f3373a46d59b6a10b4a0b14caebca0e6c7f756d5e2cca5270241dee343da95d811560371fb8fc2b093884e11216a8f668423979c3c612b8a744635afabb53a5641a4ed087c7d0722d7be14f6fd0e086d48fe3bc3f9b48c9d574b87c1c8b3509f8371cc455e6b14e13d83a9a28ea24fadc7734d0ecfba53872e74d5519e539dbc8277a54567ef7d705e55816842f8e9d8373e3822110907a09519ad7f751967c4a9ba82730373c2ffb62c7150e7301394065dce2f4c8af463a5acfed1ef964872668210d53545818e01ff519151d0fc49484e17289d112d7eb1f5a0f2e1522d68b351f76ed496ff4b74b7ba8a2db07db7eab29cc4051877c889e4e4caef611747e54a69cd092844eeb5b68e2cf05225a527d2b2cc8cce63bcae85e3de89a4c6ab4af52cdf0a57900932ddf77dc375d5759c1bd4ac058a4bd4ff003d0e950da622e95ffc2dcce9489afc0e89ce921b853ac092918e7655f0aaec77f306a50867b0f99aeae8b785eb9835af6292441f8bb843075a7a649db830b21f055fc0c9e57269e59401d636bee46f8e7c6bf087f1d7974d1d6951981896c3d79b218f9c0b331e6f71988c1aabb22d5bd578f727cc564197e501ce716a0842e59e7a706ff1be2446e5a33d00e9e0d744f710ed8c3694902939863a48940c7a8f53548dd70caf53d888424ee85fd912a6e8cb1d0eac25a99afcb99272f74a86a7d933303a2238637d997cebdc0e1ccd917776cfe51a9a5ab003235ee4d88d26d5300304bdddbd1235fd61ad892573a5c500afcff0ba220340fc18deabf8a4200691c854de0258cd7763843fbe7a12b4e9bca418b1be09dcdf620b0bc63ddcc22d972c30d98b24831d057a194db3850d8b4418d05e2de964e1599bcfdb3dd47b30f292477842e7c31e77a712bc39ec86bf9f60d2b049cbd74449894b621de25fcffe074a80dedebad735503ff76502c8ee1bbdc11f714110bd05aa7e1f2a83207f6ffbd5f9adb6eb480c8cec06d91e2c4799b04338c2411bc4010ee52ee68775f1f821359bc4f31a46a3f42d33efde41077fe09f7d5b23e9a57d9aba242bc555f6cd2cabd0be260a1825ed7b73e1100811d5e9cdb5b5f1027e1f0d3bcf47da588d4d8e3c8a917e6968056cb5e8887142765ff0ce967aee2d8788d12138c1b8bcc282183b7f0587cf50bd0ece0d0e15f13c8bc7850b84b6f9339e2c66ebc312ed7237f48688c000b20f5f825d6f9ef120cca72c8f31cfa575e1aa0c33f16e954df2dec4abe3737c8e197c5a894c7882cc4e5e5a28360c98a73a3eb1d3ff8a63e6ac9f152e2b0ef9e25824aac57f9f84a1c46c866bbda09fbe5662bc92636671d2f6d07703a4c29f6dd6030ca8f0b74331240ff8e9697b3bf0a3b65a6c39fda3575f8b593979926d06412598726952c808859923b1c2596d1766131f9b1ebda2e097407ba0ae48bcdb05bdb816236eb7e093455af6745582cbcbf2a7d3db69c42be19bf09edba673cb6611bce1b98dd4ba5cc39d0bbc3c2fcac451bf4946a9e713f40ea4645b97892fb554c6d8b45932fcd54a2e239c3f20c8b5214489f48acf5202099d56ad09a8ca3eb9b1585108585738c16656a81bf2ba3bfc7da34de978c310f3a4d8db03f41a021cbe447d927740ec12590967bebba34fd57efeaed0cce394ccd0297bc64607376bf1f0b160fe84838fd184f8e6f2b0ae3e88303c4cda251d7dff5b205370ee57dbac18c8ec7521530900e9171543998bb1528e374efadaffd3a4049791290033715b9aef258248697ba5894f0fb781d191c221ed08ce2ce96d5c6a3646022ab7084ca1f02debbac4af76a72c713b433ee3052e1910d6e091f5bfc3b8090a1f5920f4bba0d367caeec</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>加密文章</category>
      
    </categories>
    
    
    <tags>
      
      <tag>加密随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>failed</title>
    <link href="/2020/05/09/falied/"/>
    <url>/2020/05/09/falied/</url>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="输入密码吧皮卡丘！" /><label>输入密码吧皮卡丘！</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="27d2eea2ffa7403ad1afd1168a5dc82e3d3248bc48fca02b43e4f7e04f14971f"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>生活</category>
      
    </categories>
    
    
    <tags>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux2.0</title>
    <link href="/2020/05/05/linux2-0/"/>
    <url>/2020/05/05/linux2-0/</url>
    
    <content type="html"><![CDATA[<p>Linux的进行时</p><p>#05-05</p><p><strong>用户和权限管理</strong><br>用户分为root用户和普通用户，<strong>useradd FluoxeTine</strong>就新建了用户，id root,id FluoxeTine查看是否存在用户。查看家目录，ls /root得到root的家目录。ls -a /home/FluoxeTine得到新建用户的家目录。在etc文件也能看到用户的存在，tail -10 /etc/passwd(tail -10 /etc/shadow.</p><p>设置密码：passwd FluoxeTine。删除用户：userdel -r FluoxeTine.</p><p>修改用户账号的信息：usermod -d 新目录，更换用户家目录的位置。</p><p>用户组的管理命令：groupadd group1–&gt;useradd user1–&gt;usermod -G group1 user1。useradd -g group1 user2一步操作</p><p>…待更新</p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux1.0</title>
    <link href="/2020/04/24/linux/"/>
    <url>/2020/04/24/linux/</url>
    
    <content type="html"><![CDATA[<p>Linux的初识</p><p>#04-24</p><p>1.Linux是最普及也是最实用的服务端操作系统，App和网站大多运营在Linux操作系统上———&gt;服务端的运维和开发工作必备技能。</p><p>2.Linux作为服务端操作系统，命令行为主进行操作，与客户端的图形交互界面不一致。我直接操作装载下来就是命令行终端。一般不关机，init 0可以达到关机的效果。</p><p>3.在你的登录界面，可以看一下操作符来判断用户情况。操作符是#登录的是root，操作不受限制，$一般用户，操作符受限制，部分功能是不能使用的。</p><p>终端分类：图形终端，命令行终端，远程终端（SSH，VNC）。在图形终端里可以单独创建属于CentOS的用户，就是”$”开头的受限用户。</p><p>4.命令很多</p><p><strong>帮助命令</strong>能帮大忙：man(manual),help,info.<strong>man</strong>的用法，man ls 得到ls命令的用法，man man得到man本身的方法。<strong>help</strong>的用法：内部命令help cd，外部命令 ls –help。<strong>info</strong>的用法：是help的补充，详细版。我个人习惯直接man查询。</p><p>Linux里一切皆文件，我们梳理一下目录文件的情况：”/“显示出linux的默认文件夹（根目录），”/root root” 用户的家目录,常用目录：”/etc”配置文件目录，”/bin”命令目录，”/sbin”管理命令目录。</p><p><strong>重要命令：</strong></p><p><strong>ls</strong>:查看当前目录下的文件，ls <strong>-l</strong>长格式，可以显示出文件类型。”-“普通文件，”d”文件夹，后面的九个字符都表示文件的权限，文件个数，文件的创建组和用户所属的用户组，文件的大小，最后修改时间，文件名。ls -l 不跟文件名就是当前目录（ls -l .)  ls <strong>-a</strong>显示隐藏文件夹(windows一般要系统选项去设置查看隐藏的文件夹，Linux在这一点就很方便),ls <strong>-l -r</strong>以文件名逆向排序，ls <strong>-l -t</strong>以时间逆向排序，操作也可以只写一个-跟多个命令符（ls -lr)，ls <strong>-R</strong>递归显示文件夹。</p><p><strong>cd</strong>切换文件目录，Tab键可以自动补全，cd -回到之前操作的目录。操作当前目录切换的文件夹时，前半段用”.”可以替代当前目录，但是./都可以去掉。以根目录操作是绝对路径进入，以当前目录操作是相对路径进入,<strong>cd ../</strong>进入上级目录。</p><p>查看目录的小妙招：<strong>pwd</strong>显示当前的目录名称，<strong>clear or CTRl+l</strong>清屏小妙招。</p><p><strong>目录的操作：</strong></p><p><strong>mkdir</strong>建立新目录（-p可以忽略创建报错）：单次新建多级目录：mkdir /a —&gt; mkdir /a/b，直接创建多级目录: mkdir -p /a/b/c/d。<strong>rm</strong>删除目录：rm -r ，rm -r /a(提问是否删除y)逐级删除，Ctrl+C退出当前的操作，不删了。rm -r -f(恐怖型的命令）建议反复检查，不要瞎操作，无提示命令直接删除不可找回。目录的复制在后续会提到。</p><p><strong>文件的操作：</strong></p><p>打包和压缩/解压缩（两个过程）：最早的Linux备份介质是磁带后来变成了磁盘，使用的命令是tar。对文件的压缩一般分为两部分，先打包，再压缩。这个传统持续到现在，压缩的命令是gzip，bzip2，tar。我们对/etc来操作，内部有.conf结尾的文件（配置文件），Linux一般都是备份配置文件。再介绍一个特殊的文件类型：tmp临时文件，我们操作大多在这个文件演示。</p><p><strong>tar</strong>在打包命令，c打包，x解包。</p><p>tar cf /tmp/etc-back.tar  /etc,执行就打包完成，ls -lh  /tmp/etc-back.tar标准方式查看文件大小。gzip方式进行压缩：tar c<strong>z</strong>f /tmp/etc-back.tar.gz（.tgz)  /etc,打包同时也压缩,双扩展名展示以便明示压缩操作。bzip2方式进行压缩：tar c<strong>j</strong>f /tmp/etc-back.tar.bz2(.tbz2)  /etc。</p><p>bzip2的压缩时间长，因为<strong>bzip2</strong>压缩比例更高。ls -lh /tmp/etc-back.tar.*展示文件大小，即可作比较。</p><p>tar xf /tmp/etc-back.tar -C  /root 执行普通解压缩。tar zxf /tmp/etc-back.tar.gz -C /root 执行gzip的解压缩，tar jxf /tmp/etc-back.tar.bz2 -C /root 执行bzip2的解压缩。</p><p>文件的复制：cp命令复制文件。一开始尝试了cp /root/a /tmp ，结果报错，因为/a是目录，复制目录需要-r。文件可以直接复制。为了演示，touch命令创建空文件，touch /filea–&gt;cp /filea .tmp (cp -v /filea /tmp查看进度条)。复制操作之后原有的操作时间会改变，此时有选项可以保留操作时间，cp -p 保留时间，cp -a的功能比较强大，保留属主，保留时间，保留权限。</p><p>文件和文件夹的移动或者重命名 ：mv命令，重命名：mv /filea /fileb,其实底层也相当于是移动。移动：mv /fileb /tmp 一个目录下的文件夹移动到另外一个并且改名：mv /tmp/file /filec。移动目录：mv /dira /tmp。移动多个文件是可以使用通配符，”*”匹配全部，”？”匹配单个字符。</p><p>查看文件内容，cat 全部 ，head头部 选择行数，tail尾部选择行数-3，tail -f跟踪文件的变化，wc -l /tmp/filea查看多少行，more。less分行显示</p><p>vim正常模式：i输入一些文本后，区分几种插入模式之间的不同，i当前插入，I插入并且到达此行的开头，a来到插入处的后一位，A来到插入行的结尾，o向下插入一行，O向上插入一行。”:”，hjkl对光标进行上下左右的移动。</p><p>复制：yy整行复制，p整行粘贴，nyy（3yy）复制3行，p整块粘贴。y$,从光标处复制到最末尾。剪切：dd命令剪切整行，d$剪切光标到这一行的结束，p进行粘贴。撤销操作：u，多次撤销。Ctrl+r重做操作，解决撤销过多的问题。x删除，r替换也是常用命令。</p><p>vim的命令模式：文本的保存：w /root/a.txt。打开文件时：vim filename，在保存时就直接：w操作。”:wq”保存退出,”:q!”不保存退出。查找命令”/x”，按”n”使光标寻找下一个字符，”shift+n”往上寻找相同的字符。替换命令：”:%s/old/new”将以前的字符更换成新的字符。如果有多个字符需要替换，”:%s/old/new/g”全局替换，如果要取规定的行数”:2,4s/old/new.</p><p>更换到指定的位置：”:set nu”–&gt;11 shift+G移动到了第11行。移动到第1行”g”,移动到最后一行”G”。shift+6移动到本行开头，shift+4移动到行末尾。”set nu”显示行数的操作比较常用，可以自行配置使每次打开都显示行号。vim /etc/vimrc–&gt;shift+g–&gt;o–&gt;set nu–&gt;:wq</p><p>vim的可视模式：”v”字符可视模式，”v”可视行模式，”ctrl+V”块可视模式，勾选出操作块。比如在块的每行前列加入字符，I–&gt;123–&gt;esc按两次，操作成功。</p><p><strong>su，sudo</strong>命令：</p><p>su切换用户：su - FluoxeTine,访问/root目录会提示你权限不够，exit退出当前用户。shutdown -h 30,30分钟关闭系统，shutdown -C可以中断操作，这是root用户的特权。将此命令赋给普通用户：visudo–&gt;FluoxeTine ALL(localhost)=/sbin/shutdown -c。在普通用户的环境下操作时：sudo /sbin/shutdown -c–&gt;输入密码。sudo赋予普通用户某个root拥有的权利。</p><p><strong>文件权限</strong></p><p>第一个的符号表示类型（常用的-普通文件，d目录文件），后接的三个符号代表用户对文件的权限，中间三个是用户组对文件有什么权限，最后三个表示其他用户对文件有什么权限。普通文件权限字符（八进制）：r=4读，w=2写，x=1执行。创建文件时会根据此时的用户和用户组根据umask值计算，有默认权限。目录文件权限字符：x进入目录，rx显示目录内的文件名，wx修改目录内的文件名。</p><p><strong>修改</strong>权限：chmod修改文件，目录权限，可用字符也可以数字修改，chown修改属主属组，chgrp单独更改属组。chmod修改时，u,g,o分别对应三个部分，a对应全局，+增加权限，—减少权限，=设置权限。chmod u +x filea和chmod 446 filea。</p><p><strong>软件</strong></p><p>软件包管理器CentOS使用yum包管理器，安装格式为rpm。</p><p>rpm包格式，rpm -q查询软件包，-i安装软件包，-e卸载软件包。yum命令：install安装软件包，remove卸载软件包，list| grouplist查看软件包，update升级软件包。使用阿里的镜像，介绍详细，就不一一赘述了。yum不受依赖控制，rpm有依赖限制问题，也有软件来源不安全的问题。软件长时间放置会出现bug，最好定时升级yum update.</p><p><strong>top和ps</strong><br>ps查看当前的终端下能查看到的进程状态，ps -e | more简单分批查看,ps -ef | more能显示有效用户ID，父进程PPID，显示命令的完整名称CMD。ps -eLf | more,查看LWP轻量级进程（线程）。pstree | more，查看进程树。</p><p>top，顶部会显示开机时长，登录用户，平均负载，第二行tasks，显示运行的进程总数和状态。第三行CPU的分配情况，第四行内存使用情况，第五行Swap虚拟内存，内存不足时调用。动态显示进程情况</p><p><strong>本着职业道德的原则</strong>，我完成了这次分享。不过目前看来已经没有用了，放在盘里，需要自取。</p><p>链接：<a href="https://pan.baidu.com/s/1g2Aj3EVdS0Hj3ZPsfxB5ug" target="_blank" rel="noopener">https://pan.baidu.com/s/1g2Aj3EVdS0Hj3ZPsfxB5ug</a><br>提取码：q2ng<br>复制这段内容后打开百度网盘手机App，操作更方便哦</p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>秃头Tine的锅3.0</title>
    <link href="/2020/04/21/hotel-3/"/>
    <url>/2020/04/21/hotel-3/</url>
    
    <content type="html"><![CDATA[<p>吐血完成，此篇是反思和总结</p><p>#代码历程</p><p>##04-12</p><p>这是第一次接入这个实战的HAdmin，看看一路走了多少坑，心脏病都快吓出来了。</p><p>在接到的第二天一早，没有匆匆忙忙登录进模板，只看了大概，连增删，按键，功能都没看就开始匆匆上手了，这真不知道给后面的开发带来多大的麻烦（<strong>First Blood</strong>）</p><p>首先是导包，之前的setting我以为配好了，其实并没有，所以导包花了好久好久（7hours？之后看了Lombok，用@Data自以为很简便的写完了entity，CodeGenerator也没看懂，就开始了第一次Controller，mapper和ftl之旅。mapper因为有BaseMapper就没有用sql语句，后患无穷（<strong>Double Kill</strong>）</p><p>ftl语法不熟，完全不知道界面和controller的连接（<strong>Triple Kill</strong>）</p><p>增加和更新根本不是我想的那么简单，直接add，update就解决那种，又重学ModelAndView,加入视图层才勉强能看（<strong>Quadra Kill</strong>）</p><p>##04-15<br>摸索到了CodeGenerator以及setting阿里源导包。方便多了。</p><p>##04-16<br>在Discount里摸到了ftl和controller的关系，以及开始修改mapper里的数据库问题。</p><p>##04-20<br>在我一个一个完善ing即将大功告成的时候，我废了（<strong>Penta Kill</strong>），因为之前没有进入过界面仔细看模板的功能和需求，所以实体里少了不少column，昨晚我发现这个事的时候，已经彻底报废了，我不能再全部重写，所以这个比较抱歉，我带着自己的逻辑套用了Len的一些ftl。</p><p>##04-21<br>在一天的完善后我成功了。终于不再缺斤少两。</p><p>#业务逻辑</p><p>（以证明我确实自己好好写过，并且即将成功….<br>1.总共admin，customer，discount，measure，jobs，employee六个实体类。这是改善后的sql文件</p><pre><code>create database hotel default charset utf8;use hotel;CREATE TABLE `admin` (  `id` int NOT NULL AUTO_INCREMENT COMMENT &#39;管理员id&#39; ,  `name` varchar(50) DEFAULT NULL COMMENT &#39;管理员名&#39;,  `pass` varchar(50) DEFAULT NULL COMMENT &#39;管理员密码&#39;,  `type` int DEFAULT NULL COMMENT &#39;权限类型&#39;,  `createdAt` datetime NOT NULL DEFAULT NOW() COMMENT &#39;创建时间&#39;,  `updatedAt` datetime NOT NULL DEFAULT NOW() COMMENT &#39;更新时间&#39;,  PRIMARY KEY (`id`)) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 COMMENT=&#39;管理员&#39;;CREATE TABLE `discount` (  `id` int NOT NULL AUTO_INCREMENT COMMENT &#39;优惠券类型&#39;,  `name` varchar(50) DEFAULT NULL COMMENT &#39;优惠券名&#39;,  PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT=&#39;优惠券&#39;;CREATE TABLE `customer` (  `id` int NOT NULL AUTO_INCREMENT,  `name` varchar(50) DEFAULT NULL COMMENT &#39;名字&#39;,  `number` varchar(20) DEFAULT NULL COMMENT &#39;联系方式&#39;,  `discount` int DEFAULT NULL COMMENT &#39;优惠券类型&#39;,  `type` int DEFAULT NULL COMMENT &#39;入住状态&#39;,  `coming` datetime NOT NULL DEFAULT NOW() COMMENT &#39;入住时间&#39;,  `leaving` datetime NOT NULL DEFAULT NOW() COMMENT &#39;退房时间&#39;,  PRIMARY KEY (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT=&#39;顾客&#39;;CREATE TABLE `employee` (  `id` int NOT NULL AUTO_INCREMENT,  `name` varchar(100) DEFAULT NULL COMMENT &#39;名字&#39;,  `gender` varchar(2) DEFAULT NULL COMMENT &#39;性别&#39;,  `id_card` varchar(20) DEFAULT NULL COMMENT &#39;身份证号&#39;,  `job` int DEFAULT NULL COMMENT &#39;员工岗位&#39;,  `job_id` int DEFAULT NULL COMMENT &#39;工号&#39;,  `address` varchar(50) DEFAULT NULL COMMENT &#39;地址&#39;,  `evaluation` varchar(200) DEFAULT NULL COMMENT &#39;评价&#39;,  `description` varchar(200) DEFAULT NULL COMMENT &#39;描述&#39;,  PRIMARY KEY (`id`)) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8 COMMENT=&#39;员工&#39;;CREATE TABLE `jobs` (  `id` int NOT NULL AUTO_INCREMENT COMMENT &#39;岗位id&#39;,  `name` varchar(50) DEFAULT NULL COMMENT &#39;职位名&#39;,  PRIMARY KEY (`id`)) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8 COMMENT=&#39;职位&#39;;CREATE TABLE `measure` (  `id` int NOT NULL AUTO_INCREMENT,  `name` varchar(500) DEFAULT NULL COMMENT &#39;操作内容&#39;,  `time` datetime NOT NULL DEFAULT NOW() COMMENT &#39;操作时间&#39;,  PRIMARY KEY (`id`)) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8 COMMENT=&#39;操作记录&#39;;INSERT INTO `admin` VALUES (1,&#39;admin&#39;,&#39;admin&#39;,1,null,null);</code></pre><p>2.Admin是管理员，我们需要id，用在measure的表格里，name和pass用来登录，type是权限，这也是后来查模板才注意到的。</p><p>Jobs是工作类型，要有id，在employee里选择工种时配合使用，name岗位名。</p><p>Employee是员工，id，name，gender，<strong>job</strong>和jobs有关的岗位id，要和jobs连接在一起。jobId岗位Id，<strong>address地址，evaluation评价，description描述，gender性别，idCard身份证号码，</strong>这一堆信息都是后面加入的，之前没看过信息的弊端。<br>之前id，job和jobId没分清，写漏了。<strong>id是自动生成的Auto，job是岗位的代号，和job里的id是一回事儿，jobId是工号。</strong></p><p>Discount优惠券，id和name是要跟Customer连接的。</p><p>Measure操作，这个在表格里有统一的返回值，写在AdminController里了，在各个Controller里调用。</p><p>Customer顾客id，name，number联系方式，入住状态和入住时间，退房时间，都要写，这个也是之前考虑不周。在写CustomerManage.ftl的时候有发现type一直是null难以修改的问题，所以在判断状态的时候，我直接把条件开成了null</p><pre><code>$.get(&quot;/getDiscountById?id=&quot; + discount, function (da) {                var discountName = da.name;                var op = type === null ? &#39; &lt;tr&gt;\n&#39; +                    &#39;                            &lt;td&gt;&#39; + name + &#39;&lt;/td&gt;\n&#39; +                    &#39;                            &lt;td&gt;&#39; + number + &#39;&lt;/td&gt;\n&#39; +                    &#39;                            &lt;td&gt;&#39; + discountName + &#39;&lt;/td&gt;\n&#39; +                    &#39;                            &lt;td&gt;&#39; +coming + &#39;&lt;/td&gt;\n&#39; +                    &#39;                            &lt;td&gt;入住&lt;/td&gt;\n&#39; +                    &#39;                            &lt;td&gt;&lt;a href=&quot;/leaving?id=&#39; + id + &#39;&quot;&gt;退房&lt;/a&gt;&lt;/td&gt;\n&#39; +                    &#39;                            &lt;td&gt;&lt;a href=&quot;/updateCustomer?id=&#39; + id + &#39;&quot;&gt;修改&lt;/a&gt;&lt;/td&gt;\n&#39; +                    &#39;                            &lt;td&gt;&lt;a href=&quot;/deleteCustomer?id=&#39; + id + &#39;&quot;&gt;删除&lt;/a&gt;&lt;/td&gt;\n&#39; +                    &#39;                        &lt;/tr&gt;&#39; : &#39;                        &lt;tr&gt;\n&#39; +                    &#39;                            &lt;td&gt;&#39; + name + &#39;&lt;/td&gt;\n&#39; +                    &#39;                            &lt;td&gt;&#39; + number + &#39;&lt;/td&gt;\n&#39; +                    &#39;                            &lt;td&gt;&#39; + discountName + &#39;&lt;/td&gt;\n&#39; +                    &#39;                            &lt;td&gt;&#39; + coming + &#39;&lt;/td&gt;\n&#39; +                    &#39;                            &lt;td&gt;已退房(&#39; + leaving + &#39;)&lt;/td&gt;\n&#39; +                    &#39;                            &lt;td&gt;&lt;a href=&quot;#&quot; style=&quot;color:gray;&quot;&gt;已退房&lt;/a&gt;&lt;/td&gt;\n&#39; +                    &#39;                            &lt;td&gt;&lt;a href=&quot;/updateCustomer?id=&#39;+id+&#39;&quot;&gt;修改&lt;/a&gt;&lt;/td&gt;\n&#39; +                    &#39;                            &lt;td&gt;&lt;a href=&quot;/deleteCustomer?id=&#39;+id+&#39;&quot;&gt;删除&lt;/a&gt;&lt;/td&gt;\n&#39; +                    &#39;                        &lt;/tr&gt;&#39;;                $(&quot;tbody&quot;).append(op);</code></pre><p>3.add和final，update和updating：增加的时候应该是有GetMapping指向add，add方法里转向add的界面，界面里进行PostMapping之后的final操作，也就是final才是操作的实体final结束之后，转回manage界面。update先打开视图层，return视图层操作后的updateAdmin，逻辑就跟final差不多了。</p><p>值得一提的是，admin要更新的话，应该是有两个部分分开写的，type是很烦的，名字，性别，id什么的又比较方便了。</p><p>4.登录的时候，和len学到了cookie和HttpServeletRequest的使用，超高级。</p><p>4.算是终于写完咯，差点没被堆积的大物高数模电压死。</p><p><strong>下次再写之前</strong>，希望能先理清楚到底要干什么吧，自己要有开发方向，不然就全盘皆输了。（哭哭</p>]]></content>
    
    
    <categories>
      
      <category>Springboot</category>
      
    </categories>
    
    
    <tags>
      
      <tag>task1</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>秃头Tine的锅2.0</title>
    <link href="/2020/04/15/hotel-2/"/>
    <url>/2020/04/15/hotel-2/</url>
    
    <content type="html"><![CDATA[<p>发现新操作之后，重写一遍，企图搞事情</p><h2 id="2020-04-15"><a href="#2020-04-15" class="headerlink" title="#2020-04-15"></a>#2020-04-15</h2><p>好的，有句话不知当讲不当讲，我又忘记保存了，再一次重写这个blog，差点气死。</p><p>首先面临着的是重新clone重新导包，所以我这次摸到了活的setting，原来之前的都改错了（???）<img src="/2020/04/15/hotel-2/12.jpg" alt>看着五分钟之内导完的包，我才明白到啥叫阿里的快乐。第一次好像导包超过六小时…吐了</p><p><img src="/2020/04/15/hotel-2/1.jpg" alt>接下来修改application.properties的配置，因为和学长的macOS不一样，加之我后来发现数据库也不一样。所以做出那些修改。MySQL是直接启用phpStudy的版本5，学长配置的版本6。这就导致jdbc.Driver和jc.jdbc.Driver的出入一直报错，并且对useSSL也是做出false修改。</p><p>配置完把1.0里的import.sql复制运行，此刻用上了CodeGenerator，终于在Len的解释和官方续命下我搞懂了。哇，不要太感动<img src="/2020/04/15/hotel-2/11.jpg" alt>这才是自动生成Entity和Mapper的快乐吗?</p><p>再接下来就是写入前端了以及连接前后操作的问题了，又到了知识的盲区。NetController真是emm</p><p>#04-16</p><p>##今日尬点<br><img src="/2020/04/15/hotel-2/3.jpg" alt>笑了笑了，被@RestController和@Controller卡了半天，界面一直没有对应的网页。</p><p><img src="/2020/04/15/hotel-2/2.jpg" alt><img src="/2020/04/15/hotel-2/4.jpg" alt>从html更改到后端操作真的卡了我怕有小半天？本来是session写的，写了报错，又改成cookie，还错。就直接equals(“admin”)…一路下滑。不过好歹登录总算可以了</p><p>想想我们到底要干什么：</p><p>梳理一下写代码的顺序：application.properties的配置和sql文件的书写—&gt;database的连接和表格的生成—&gt;CodeGenerator修改后生成了Entity和Mapper—&gt;此时应该先完成初级的login和logout的界面—&gt;会用到NetController，cookie和HTTPServletRequest来登录，Controller注解放在类外，以便找到界面—&gt;使用<kbd>Ctrl</kbd>+<kbd>C</kbd> <kbd>Ctrl</kbd>+<kbd>V</kbd>对前端界面盗取修改ftl文件—&gt;controller，Mapper连接.ftl文件，controller里写操作，mapper里对数据库的操作是新定义的sql语句注解，而不是快捷方法生成，ftl里负责前端显示—&gt;操作记录和管理员，顾客，员工，工种都有要得到全部数据的界面（manage界面），所以务必加上getAll（）方法—&gt;搞定你的ftl文件，也就是前端，在不同的实体里会调用其他实体的数据，所以请保证你的方法足够衔接。</p><p>举个栗子：最开始解决的Discount界面的增加和返回，只写入add方法，在DiscountMapper和addDiscount.ftl中连接的时候，根本不能实现，然后就开始修改，增加和保存按钮是Post的方法，所以靠GetMapping肯定实现不了，然后只能写出GetMapping来处理add，PostMapping来处理finalDiscount，PostMapping的处理相当于保存新增的功能，进而应当返回到DiscountManage界面。addDiscount请求定向到addDiscount.ftl界面—&gt;addDiscount.ftl里连接Post的finalDiscount—&gt;新增完毕后定向到discountManage.ftl界面。此刻完成新增及保存。</p><p>写修改（就是更新界面的时候也发现了同样的问题)，修改是一个Post请求，不可能直接在Controller里GetMapping就完成，所以打算仿照add..之后自然是废物了<img src="/2020/04/15/hotel-2/7.jpg" alt>后来意识到这么写根本没有返回值，然后翻到一篇博客<strong><a href="https://www.cnblogs.com/mazhitao/p/7424415.html" target="_blank" rel="noopener">https://www.cnblogs.com/mazhitao/p/7424415.html</a></strong>，<strong><a href="https://www.jianshu.com/p/599f6340b6ab" target="_blank" rel="noopener">https://www.jianshu.com/p/599f6340b6ab</a></strong>。后来一直返回404，最后是ftl文件的问题，就意味着，前端的界面与后端的操作连接不上。方法和界面多了要分清楚哪些是界面，哪些是方法，贴一波码，Discount是我最先完善的部分。</p><pre><code>package com.admin.hotel.Controller;import com.admin.hotel.Entity.Discount;import com.admin.hotel.Mapper.DiscountMapper;import com.admin.hotel.Mapper.MeasureMapper;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.GetMapping;import org.springframework.web.bind.annotation.PostMapping;import org.springframework.web.bind.annotation.ResponseBody;import org.springframework.web.servlet.ModelAndView;import javax.servlet.http.HttpServletRequest;import java.util.List;@Controllerpublic class DiscountController {    @Autowired    DiscountMapper discountMapper;    @Autowired    private MeasureMapper measureMapper;    @GetMapping(&quot;/discountManage&quot;)    public String discountManage() {        return &quot;discountManage&quot;;    }    @ResponseBody    @GetMapping(&quot;/getDiscountById&quot;)    public Discount getDiscountById(int id) {        return discountMapper.selectById(id);    }    @GetMapping(&quot;/updateDiscount&quot;)    public ModelAndView updateDiscount(int id) {        ModelAndView modelAndView = new ModelAndView(&quot;updateDiscount&quot;);        modelAndView.addObject(&quot;id&quot;, id);        return modelAndView;    }    @PostMapping(&quot;/updatingDiscount&quot;)    public String updatingDiscount(Discount discount, HttpServletRequest httpServletRequest) {        measureMapper.inserts(AdminController.measure(httpServletRequest) + &quot;更新了优惠券：&quot; + discount.getName());        discountMapper.updateById(discount);        return &quot;discountManage&quot;;    }    @ResponseBody    @GetMapping(&quot;/getAllDiscount&quot;)    public List&lt;Discount&gt; getAllDiscount() {        return discountMapper.getAll();    }    @GetMapping(&quot;/addDiscount&quot;)    public String addDiscount() {        return &quot;addDiscount&quot;;    }    @PostMapping(&quot;/finalDiscount&quot;)    public String finalDiscount(Discount discount, HttpServletRequest httpServletRequest) {        measureMapper.inserts(AdminController.measure(httpServletRequest) + &quot;添加了优惠券：&quot; + discount.getName());        discountMapper.insert(discount);        return &quot;discountManage&quot;;    }}</code></pre><p>就这我还蛮无语的。。因为updatingDiscount和finalDiscount在ftl的位置卡了我好久。</p><p><strong>discountManage.ftl</strong></p><pre><code>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;    &lt;meta charset=&quot;utf-8&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt; - jqGird&lt;/title&gt;    &lt;meta name=&quot;keywords&quot; content=&quot;&quot;&gt;    &lt;meta name=&quot;description&quot; content=&quot;&quot;&gt;    &lt;link rel=&quot;shortcut icon&quot; href=&quot;favicon.ico&quot;&gt;    &lt;link href=&quot;css/bootstrap.min.css?v=3.3.6&quot; rel=&quot;stylesheet&quot;&gt;    &lt;link href=&quot;css/font-awesome.css?v=4.4.0&quot; rel=&quot;stylesheet&quot;&gt;    &lt;link href=&quot;css/plugins/bootstrap-table/bootstrap-table.min.css&quot; rel=&quot;stylesheet&quot;&gt;    &lt;link href=&quot;css/animate.css&quot; rel=&quot;stylesheet&quot;&gt;    &lt;link href=&quot;css/style.css?v=4.1.0&quot; rel=&quot;stylesheet&quot;&gt;&lt;/head&gt;&lt;body class=&quot;gray-bg&quot;&gt;&lt;div class=&quot;ibox-content&quot;&gt;    &lt;div class=&quot;row row-lg&quot;&gt;        &lt;div class=&quot;col-sm-12&quot;&gt;            &lt;!-- Example Pagination --&gt;            &lt;div class=&quot;example-wrap&quot;&gt;                &lt;h4 class=&quot;example-title&quot;&gt;优惠券管理&lt;/h4&gt;                &lt;button type=&quot;button&quot; class=&quot;btn btn-success&quot; style=&quot;margin-bottom: 10px;&quot; id=&quot;add&quot;&gt;新增&lt;/button&gt;                &lt;div class=&quot;example&quot;&gt;                    &lt;table data-toggle=&quot;table&quot;&gt;                        &lt;thead&gt;                        &lt;tr&gt;                            &lt;th&gt;优惠券名&lt;/th&gt;                            &lt;th&gt;修改&lt;/th&gt;                        &lt;/tr&gt;                        &lt;/thead&gt;                        &lt;tbody&gt;                        &lt;/tbody&gt;                    &lt;/table&gt;                &lt;/div&gt;            &lt;/div&gt;            &lt;!-- End Example Pagination --&gt;        &lt;/div&gt;    &lt;/div&gt;    &lt;!-- End Panel Other --&gt;&lt;/div&gt;&lt;!-- 全局js --&gt;&lt;script src=&quot;js/jquery.min.js?v=2.1.4&quot;&gt;&lt;/script&gt;&lt;script&gt;    $.get(&quot;/getAllDiscount&quot;, function (data) {        $.each(data, function (i, item) {            var id = item.id;            var name = item.name;            $(&quot;tbody&quot;).append(                &#39;&lt;tr&gt;&lt;td&gt;&#39; + name + &#39;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;/updateDiscount?id=&#39; + id + &#39;&quot;&gt;修改&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&#39;            );        });        $(&quot;.no-records-found&quot;).remove();    });&lt;/script&gt;&lt;script src=&quot;js/bootstrap.min.js?v=3.3.6&quot;&gt;&lt;/script&gt;&lt;!-- 自定义js --&gt;&lt;script src=&quot;js/content.js?v=1.0.0&quot;&gt;&lt;/script&gt;&lt;!-- Page-Level Scripts --&gt;&lt;!-- Bootstrap table --&gt;&lt;script src=&quot;js/plugins/bootstrap-table/bootstrap-table.min.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;js/plugins/bootstrap-table/bootstrap-table-mobile.min.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;js/plugins/bootstrap-table/locale/bootstrap-table-zh-CN.min.js&quot;&gt;&lt;/script&gt;&lt;!-- Peity --&gt;&lt;script src=&quot;js/demo/bootstrap-table-demo.js&quot;&gt;&lt;/script&gt;&lt;script&gt;    $(&quot;#add&quot;).click(function () {        //alert(&quot;ok&quot;);        window.location = &quot;/addDiscount&quot;;    });&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p><strong>addDiscount</strong>:</p><pre><code>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;    &lt;meta charset=&quot;utf-8&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt; - jqGird&lt;/title&gt;    &lt;meta name=&quot;keywords&quot; content=&quot;&quot;&gt;    &lt;meta name=&quot;description&quot; content=&quot;&quot;&gt;    &lt;link rel=&quot;shortcut icon&quot; href=&quot;favicon.ico&quot;&gt;    &lt;link href=&quot;css/bootstrap.min.css?v=3.3.6&quot; rel=&quot;stylesheet&quot;&gt;    &lt;link href=&quot;css/font-awesome.css?v=4.4.0&quot; rel=&quot;stylesheet&quot;&gt;    &lt;link href=&quot;css/plugins/bootstrap-table/bootstrap-table.min.css&quot; rel=&quot;stylesheet&quot;&gt;    &lt;link href=&quot;css/animate.css&quot; rel=&quot;stylesheet&quot;&gt;    &lt;link href=&quot;css/style.css?v=4.1.0&quot; rel=&quot;stylesheet&quot;&gt;    &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;css/webuploader.css&quot;&gt;&lt;/head&gt;&lt;body class=&quot;gray-bg&quot;&gt;&lt;div class=&quot;ibox-content&quot;&gt;    &lt;form method=&quot;post&quot; action=&quot;/finalDiscount&quot;&gt;        &lt;div style=&quot;margin-bottom: 10px;&quot;&gt;            &lt;ul class=&quot;nav nav-tabs&quot; role=&quot;tablist&quot;&gt;                &lt;li role=&quot;presentation&quot;&gt;&lt;a href=&quot;/discountManage&quot;&gt;优惠券管理&lt;/a&gt;&lt;/li&gt;                &lt;li role=&quot;presentation&quot; class=&quot;active&quot;&gt;&lt;a href=&quot;/addDiscount&quot;&gt;新增优惠券&lt;/a&gt;&lt;/li&gt;            &lt;/ul&gt;        &lt;/div&gt;        &lt;div class=&quot;form-group&quot;&gt;            &lt;label for=&quot;exampleInputEmail1&quot;&gt;优惠券名&lt;/label&gt;            &lt;input type=&quot;text&quot; class=&quot;form-control&quot; placeholder=&quot;请输入优惠券名&quot; name=&quot;name&quot;&gt;        &lt;/div&gt;        &lt;button type=&quot;submit&quot; class=&quot;btn btn-default&quot;&gt;提交保存&lt;/button&gt;    &lt;/form&gt;&lt;/div&gt;&lt;!-- 全局js --&gt;&lt;script src=&quot;js/jquery.min.js?v=2.1.4&quot;&gt;&lt;/script&gt;&lt;script src=&quot;js/bootstrap.min.js?v=3.3.6&quot;&gt;&lt;/script&gt;&lt;!-- 自定义js --&gt;&lt;script src=&quot;js/content.js?v=1.0.0&quot;&gt;&lt;/script&gt;&lt;!-- Page-Level Scripts --&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p><strong>updateDiscount</strong>:</p><pre><code>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;    &lt;meta charset=&quot;utf-8&quot;&gt;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;    &lt;title&gt; - jqGird&lt;/title&gt;    &lt;meta name=&quot;keywords&quot; content=&quot;&quot;&gt;    &lt;meta name=&quot;description&quot; content=&quot;&quot;&gt;    &lt;link rel=&quot;shortcut icon&quot; href=&quot;favicon.ico&quot;&gt;    &lt;link href=&quot;css/bootstrap.min.css?v=3.3.6&quot; rel=&quot;stylesheet&quot;&gt;    &lt;link href=&quot;css/font-awesome.css?v=4.4.0&quot; rel=&quot;stylesheet&quot;&gt;    &lt;link href=&quot;css/plugins/bootstrap-table/bootstrap-table.min.css&quot; rel=&quot;stylesheet&quot;&gt;    &lt;link href=&quot;css/animate.css&quot; rel=&quot;stylesheet&quot;&gt;    &lt;link href=&quot;css/style.css?v=4.1.0&quot; rel=&quot;stylesheet&quot;&gt;    &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;css/webuploader.css&quot;&gt;&lt;/head&gt;&lt;body class=&quot;gray-bg&quot;&gt;&lt;div class=&quot;ibox-content&quot;&gt;    &lt;form method=&quot;post&quot; action=&quot;/updatingDiscount&quot;&gt;        &lt;div style=&quot;margin-bottom: 10px;&quot;&gt;            &lt;ul class=&quot;nav nav-tabs&quot; role=&quot;tablist&quot;&gt;                &lt;li role=&quot;presentation&quot;&gt;&lt;a href=&quot;/discountManage&quot;&gt;优惠券管理&lt;/a&gt;&lt;/li&gt;                &lt;li role=&quot;presentation&quot; class=&quot;active&quot;&gt;&lt;a href=&quot;/updateDiscount?id=${id}&quot;&gt;修改优惠券&lt;/a&gt;&lt;/li&gt;            &lt;/ul&gt;        &lt;/div&gt;        &lt;input type=&quot;text&quot; style=&quot;display:none&quot; name=&quot;id&quot; value=&quot;${id}&quot;&gt;        &lt;div class=&quot;form-group&quot;&gt;            &lt;label for=&quot;exampleInputEmail1&quot;&gt;优惠券名&lt;/label&gt;            &lt;input type=&quot;text&quot; class=&quot;form-control&quot; placeholder=&quot;请输入优惠券名&quot; name=&quot;name&quot; id=&quot;name&quot;&gt;        &lt;/div&gt;        &lt;button type=&quot;submit&quot; class=&quot;btn btn-default&quot;&gt;提交保存&lt;/button&gt;    &lt;/form&gt;&lt;/div&gt;&lt;!-- 全局js --&gt;&lt;script src=&quot;js/jquery.min.js?v=2.1.4&quot;&gt;&lt;/script&gt;&lt;script&gt;    $.get(&quot;/getDiscountById?id=&quot; +${id}, function (data) {        $(&quot;#name&quot;).attr(&quot;value&quot;, data.name);    })&lt;/script&gt;&lt;script src=&quot;js/bootstrap.min.js?v=3.3.6&quot;&gt;&lt;/script&gt;&lt;!-- 自定义js --&gt;&lt;script src=&quot;js/content.js?v=1.0.0&quot;&gt;&lt;/script&gt;&lt;!-- Page-Level Scripts --&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p>就先这样了。代码推完了，github也有。</p>]]></content>
    
    
    <categories>
      
      <category>Springboot</category>
      
    </categories>
    
    
    <tags>
      
      <tag>task1</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>秃头Tine的第一个锅</title>
    <link href="/2020/04/12/hotel/"/>
    <url>/2020/04/12/hotel/</url>
    
    <content type="html"><![CDATA[<p>秃头Tine的第一个锅，必尽力而为</p><h2 id="2020-04-12"><a href="#2020-04-12" class="headerlink" title="#2020-04-12"></a>#2020-04-12</h2><p>这是个啥情况呢，我们来看看报错…也太长了<img src="/2020/04/12/hotel/1.jpg" alt>貌似是虽然已经建立了SSL的连接，但是没有进行身份验证的问题。然后修改一下配置<img src="/2020/04/12/hotel/2.jpg" alt>我又可以了<img src="/2020/04/12/hotel/3.jpg" alt>虽然只是个极其简单的复制表格，毕竟跑起来了哈哈哈嗝…</p><p>还有几个warning等待解决<img src="/2020/04/12/hotel/4.jpg" alt>是jdk版本过高的问题，貌似要1.8才可，但说实话，为了不看warning更换jdk版本还是太..累了。非法反射警告其实对跑界面没啥影响，先让我的jdk13活会儿..虽然1.8也下载了。怕冲突，tcl。</p><p>和Len搭档太占便宜了哈哈哈嗝..</p><p>今天摸到SQL的新操作<img src="/2020/04/12/hotel/5.jpg" alt>妙啊，这样就能直接用时间戳写注入日期和退房日期了。</p><p>简化开发必备利器<strong>Lombok</strong>，注解用起来是真舒服。还有神器在手MyBatis—Plus，<strong><a href="https://mp.baomidou.com/" target="_blank" rel="noopener">https://mp.baomidou.com/</a></strong>官方文档挺全的。第一次上手，小有收获捏。</p><p><img src="/2020/04/12/hotel/6.jpg" alt>快被气die，不过实话实说，本来不会想到单独写的方法返回管理员的字符串。但是奈何要操作太多，一个一个写很麻烦，就只好盗用一下cookie了。结果写半天还一直报错啊啊啊<img src="/2020/04/12/hotel/7.jpg" alt></p><p>其实里面的代码生成器我看了，看半天也没摸清楚。。</p><p>Mybatis—Plus的BaseMapper一直没太学清楚是个啥情况，看起来只有继承之后外部覆写了<img src="/2020/04/12/hotel/8.jpg" alt><strong>声明：此段的更正在下一次blog</strong></p><p>这个.sql文件跑起来也太挺快了吧<img src="/2020/04/12/hotel/9.jpg" alt>可以不用命令行的创建自然是方便好多，把你的databases连上是吧</p><p>application.properties配置</p><pre class="line-numbers language-spring.datasource.url=jdbc:mysql://127.0.0.1:3306/hotel?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false&amp;serverTimezone=Asia/Shanghai"><code class="language-spring.datasource.url=jdbc:mysql://127.0.0.1:3306/hotel?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false&amp;serverTimezone=Asia/Shanghai">spring.datasource.username=rootspring.datasource.password=rootspring.datasource.driver-class-name=com.mysql.jdbc.Drivermybatis.configuration.map-underscore-to-camel-case=truespring.datasource.hikari.connection-init-sql=SET NAMES utf8mb4 COLLATE utf8mb4_unicode_cispring.datasource.hikari.auto-commit=truespring.datasource.hikari.minimum-idle=0spring.datasource.hikari.maximum-pool-size=15spring.datasource.hikari.pool-name=DatebookHikariCPspring.datasource.hikari.connection-test-query=SELECT 1spring.datasource.hikari.max-lifetime=1200000spring.freemarker.suffix=.ftlserver.port=8081logging.file=card.loglogging.path=./spring.servlet.multipart.max-request-size=10MB# 单个文件的最大值spring.servlet.multipart.max-file-size=10MB#小程序wxAppId=wxfcb03b4bb7ac4f49wxSecret=e8d73d2d1c8fb1a511b1ca4a91589358<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>jc.jdbc和jdbc差距是来自Mysql的版本问题吧。</p><p>太废物了，前端鲨我啊，又开始摸鱼JQuery：<a href="https://jquery.com/" target="_blank" rel="noopener">https://jquery.com/</a></p>]]></content>
    
    
    <categories>
      
      <category>Springboot</category>
      
    </categories>
    
    
    <tags>
      
      <tag>task1</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Springboot和Freemaker搞一个login叭</title>
    <link href="/2020/04/10/login/"/>
    <url>/2020/04/10/login/</url>
    
    <content type="html"><![CDATA[<p>login2.0</p><h2 id="2020-04-10"><a href="#2020-04-10" class="headerlink" title="#2020-04-10"></a>#2020-04-10</h2><p>本次操作所需：<br>*Freemaker<br>*Springboot</p><hr><p>这次的任务界面虽然没有报错，但还没有完全跑起来，增加service层写了之后，感觉业务逻辑下降了…</p><p>重写了个表单，过程不赘述了<img src="/2020/04/10/login/1.jpg" alt></p><p>实体类Entity<img src="/2020/04/10/login/2.jpg" alt></p><p>controller类<img src="/2020/04/10/login/3.jpg" alt></p><p>service<img src="/2020/04/10/login/4.jpg" alt><img src="/2020/04/10/login/5.jpg" alt></p><p>dao层<img src="/2020/04/10/login/7.jpg" alt></p><p>新配的xml文件总感觉是有些问题的，application.properties的配置也应当再多看看，刚学还是摸不清喔</p><p><img src="/2020/04/10/login/8.jpg" alt></p><p>说实话，添加了service层之后，还得慢慢完善业务逻辑，是在太菜。加之方法大小写没分清的问题。。。困扰许久</p><p>添加一个简易的界面<img src="/2020/04/10/login/6.jpg" alt></p><p>响应界面就不贴了吧</p><hr><p>写都写了老半天，突然反应过来应该加入session和cookie的….</p>]]></content>
    
    
    <categories>
      
      <category>Springboot</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Freemaker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java也要当小叽居（？</title>
    <link href="/2020/04/08/spider/"/>
    <url>/2020/04/08/spider/</url>
    
    <content type="html"><![CDATA[<p>Java也要试试爬虫的，小阳在线头秃..</p><h2 id="2020-04-08"><a href="#2020-04-08" class="headerlink" title="#2020-04-08"></a>#2020-04-08</h2><p>*了解session和cookie，http协议<br>*Apache爬取微博热门100</p><p>task1<strong>http相关</strong>：<br>1.http超文本传输协议，请求方法如下<img src="/2020/04/08/spider/10.jpg" alt>常见的响应状况如下<img src="/2020/04/08/spider/9.jpg" alt>介绍一下http无状态是什么意思：服务器发送请求后，服务器解析此请求，返回对应的响应，服务器完成这个完全独立的过程，不会记录服务器前后变化，缺少状态记录，此时如果需要处理前面的信息，就必须重传。那么出现了<strong>cookie</strong>和<strong>cookie</strong>，session是一次浏览器和服务器的交互的会话，会话在服务端用来保存用户的会话信息。cookie在客户端，在下次访问网页时自动附带上cookie发送给服务器，像是个访问凭证。</p><p>task2<strong>小叽居</strong>：</p><p>1.请求首页数据：</p><p>u1s1，这是写的第二次，是我被java爬虫卡住的第四天，python的scrapy还没学完，突然写java爬虫，内心障碍重重。然后拖到了现在。今早电脑蓝屏了，昨天写的blog就这么没了。冷静许久之后，我又回来了。</p><p><img src="/2020/04/08/spider/1.jpg" alt></p><p>放个码先，对这块真是刚接触，看了些博客，出入java爬虫当然拿豆瓣试水了。随便写点吧。基本逻辑就是：利用 <strong>CloseableHttpClient</strong>生成一个httpclient，就相当于打开浏览器的操作。创建响应response为null，为了后续步骤。紧接着明确自己是get还是post请求，此处要得到html界面自然是get方法了。HttpGet创建get请求request，就是输入了网址。</p><p>反爬虫机制太多，界面问题也比较多，所以必不可少的就是try-catch的工作。此时response就派上了用场，执行get请求，其execute方法传入一个request对象，返回一个response对象。接下来就是对响应状态做判断了。</p><p>响应为200就用HTTPEntity创建实体获取响应内容，用String方法写出，“utf-8”格式准是没毛病的。println就好了。</p><p>当然不是两百的状况就多了。404,500啥的是吧，参考<strong>task1</strong>。使用 httpClient发出HTTP请求时，系统可能抛出两种异常，分别是ClientProtocolException和IOException。第一种异常的发生通常是协议错误导致，如在构造HttpGet对象时传入的协议不对（例如不小心将”http”写成”htp”），或者服务器端返回的内容不符合HTTP协议要求。第二种异常一般是由于网络原因引起的异常，如HTTP服务器未启动等。</p><p>finally，千万别忘了关闭数据流<img src="/2020/04/08/spider/2.jpg" alt></p><p>那么跑跑试试咯，被拦截<img src="/2020/04/08/spider/3.jpg" alt></p><p>跑跑登录的微博呢？<img src="/2020/04/08/spider/4.jpg" alt>得到了</p><p>2.声明，现在的码也是借鉴了<strong>Len</strong>大佬的。逻辑Len也帮忙讲解。友链中可找到。那我也只能菜鸡的摆弄一下大佬的码了。</p><p>微博的正文数据是放在<strong>script</strong>标签里<img src="/2020/04/08/spider/5.jpg" alt>打开看看就是这样子的<img src="/2020/04/08/spider/6.jpg" alt>那就解析script标签了。</p><p>静态的httpclient就直接全局打开浏览器,在将爬取的url界面赋值给url,LinkedHashMap可以维护插入元素的先后顺序，LinkedHashMap创建新的类似数组的东西（？）叫做map，然后就可以使用无非是get和put方法，此处讲到put<img src="/2020/04/08/spider/7.jpg" alt>查看一下源码，就是一个键值对的构造，找准你的小饼干，这也是个麻烦事，F12总能帮你的。</p><p>接下来创建文件file,collection.txt。再调用一些Map的方法，基础不行的我真一个一个查了…先这样吧，肝不动了。</p><p>HttpGet方法：<strong><a href="http://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/org/apache/http/client/methods/HttpGet.html" target="_blank" rel="noopener">http://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/org/apache/http/client/methods/HttpGet.html</a></strong>，在之前Apache的官方文档里都可以找到。<img src="/2020/04/08/spider/8.jpg" alt>写方法getWithHeader，</p><p>在打开文件流FileOutputStream打开输出流，往流中写入数据，爬取100条，写入for循环，因为微博热门都是写在script标签中，先筛选script标签，再生成html字符串，这里可以不用直接写，生成html文件复制一份即可。再解析html字符串，讲解析结果utf-8写入文件流。运行起来就好了。</p>]]></content>
    
    
    <categories>
      
      <category>爬虫</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Maven</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>IDEA进阶任务</title>
    <link href="/2020/03/29/springboot3-0/"/>
    <url>/2020/03/29/springboot3-0/</url>
    
    <content type="html"><![CDATA[<p>尝试系统和细节的使用springboot的第三步</p><h2 id="2020-03-29"><a href="#2020-03-29" class="headerlink" title="#2020-03-29"></a>#2020-03-29</h2><p>本次操作要求：<br>*了解maven，通过java -jar运行jar包<br>*了解springboot传递参数的方式，写出curl命令<br>*做个小型前端网页<br>*springboot freemarker做出2.0里的界面</p><p>task1<strong>Maven</strong>：</p><p>1.学习Maven附上官方文档，最为权威<strong><a href="https://maven.apache.org/" target="_blank" rel="noopener">https://maven.apache.org/</a></strong>，拿走不谢。Maven是一种简便的方法来发布项目信息，以及一种在多个项目中共享JAR的方法。简化和统一了构建方式。仔细说来应该是这样<img src="/2020/03/29/springboot3-0/5.png" alt></p><p>2.下载Maven，官方那边直接下载（靠谱），下载第二个.zip压缩包，之后将Maven配置到环境变量。配环境应该都比较熟了，不一一赘述。<img src="/2020/03/29/springboot3-0/1.png" alt="avatar"></p><p>之后path中添加<img src="/2020/03/29/springboot3-0/3.png" alt>此时你可以打开cmd或者powershell来检测是否配置成功。<img src="/2020/03/29/springboot3-0/2.png" alt><img src="/2020/03/29/springboot3-0/4.png" alt></p><p>3.（好家伙，我又卡住一次。在1.0的学习中，我略过了<strong>Maven配置阿里云</strong>。导致后患无穷。）现在来看看如何白手起家了。首先是<img src="/2020/03/29/springboot3-0/6.png" alt>填写解压Maven的目录，setting.xml的目录，本地存储maven文件的目录。比较头疼，建议慎重填写。<br>有notepad++的话当然最好。直接翻找CSDN的时候发现很多在55行填入本地存储库<img src="/2020/03/29/springboot3-0/9.png" alt>，但<strong>一旦填入就会疯狂报措</strong>，如果想感受一下可以试试在cmd输入mvn help:system检测检测。其实到目前是并没有解决<strong>为什么填入仓库会报措</strong>这个问题的，后续学习会更新。<br>在第160行配上阿里云，毕竟这种东西。。。不配个国内源真是寸步难行。有两种可能：<br><strong>这个是阿里仓库</strong><img src="/2020/03/29/springboot3-0/10.png" alt><br><strong>这个是阿里镜像</strong><img src="/2020/03/29/springboot3-0/11.png" alt></p><p>4.然后我自信满满开始操作，遇到了这样的问题<img src="/2020/03/29/springboot3-0/12.png" alt>,又给宁送了官方文档进行查阅<strong><a href="https://cwiki.apache.org/confluence/display/MAVEN/Errors+and+Solutions" target="_blank" rel="noopener">https://cwiki.apache.org/confluence/display/MAVEN/Errors+and+Solutions</a></strong>，跟着官方解释一顿操作猛如虎之后，我等待了很久。此时建议清理target。<img src="/2020/03/29/springboot3-0/13.png" alt><br>清理完毕之后，mvn clean packages成功生成jar包，这句命令是扫描包中class，打包运行<img src="/2020/03/29/springboot3-0/14.png" alt><img src="/2020/03/29/springboot3-0/15.png" alt>到这里就成功跑起来了。<strong>task1</strong>完成。</p><p>task2<strong>curl命令</strong>：</p><p>1.springboot传递参数的方式：</p><p>其实这事儿吧比较烦，springboot的注解真是太多了。估计只有靠慢慢摸索才能熟练运用了。我还没找到官方学习注解的文档，只有摸源码了。头大。Postman也没用上手，下面这段就随便写写吧…</p><p><strong>@PathVariable</strong>,它的Get和Post都可以获得路径参数，2.0里顺便介绍过了。抄了个实例跑跑看<img src="/2020/03/29/springboot3-0/16.png" alt><img src="/2020/03/29/springboot3-0/17.png" alt></p><p>这就是传说中的获得url路径的数据，100和hello是在传递的时候带入的。界面返回也是得到这两个值。</p><p><strong>@RequestMapping（value=“/域名”，method=RequestMethod.方法）</strong>，@RequestMapping后的域名是可以多级叠加的。比如类名上方加入此注解，那在访问时是需要加上类的路径的。本例中不需要。</p><p>插个题外话，@PostMapping和@DeleteMapping也是@RequestMapping和后面的RequestMethod方法的结合。浏览器的地址栏都是Get方式的请求。</p><p><strong>@RequestParam</strong>，获取”?”后的请求参数的值<img src="/2020/03/29/springboot3-0/19.png" alt><img src="/2020/03/29/springboot3-0/18.png" alt></p><p>多个参数就用&amp;&amp;就好了，话不多说，放个实例。<img src="/2020/03/29/springboot3-0/21.png" alt><img src="/2020/03/29/springboot3-0/20.png" alt>如果你打算传参的时候有啥特定的名称就<strong>（@RequestParam(“myName”) Integer id）</strong>这样在传参时就是xxx?myName=100,输出id=100。参数不写入url时会报措Error page,但”=”后面不赋值返回null，不报错。</p><p><strong>@RequestBody</strong>，主要用来接收前端传递给后端的json字符串（请求体）中的数据，Get方式无请求体，所以在使用@RequestBody时只能使用Post方法提交。只要一次就可以提取全部数据，用不着多次。</p><p>..真是快编不下去了，结合2.0里应该是常见注解。日后再更，底层的东西大多不了解，就不写了。</p><p>2.curl是个啥啊…感觉老复杂了。又送上了官方文档<strong><a href="https://curl.haxx.se/" target="_blank" rel="noopener">https://curl.haxx.se/</a></strong>（这种东西除了全英文就是完美了…），下载在这个地址<strong><a href="https://curl.haxx.se/download.html" target="_blank" rel="noopener">https://curl.haxx.se/download.html</a></strong>。和Maven有一拼，无非就是配置上环境变量了。简便一点就拖到System32目录下，就可以随地打开cmd运行curl命令了。<img src="/2020/03/29/springboot3-0/22.png" alt></p><p>说点正事，cURL是一个利用URL语法在命令行下工作的文件传输工具，它支持文件上传和下载，所以是综合传输工具，支持大量网络协议</p><p>3.等我前端摸上手了，嗯。si~（别骂了别骂了，日后补日后补…</p><p>4.前端界面一般写在resources-&gt;新建的html文件中。2.0里是解释过的。说实话只是非常粗略的看了一些，觉得最好笑的还是网页配色了<img src="/2020/03/29/springboot3-0/23.png" alt>感叹了自己极其丑的配色之后粗略写写，中途发生一些失误，所以复制粘贴过。排版就贼丑。<img src="/2020/03/29/springboot3-0/24.png" alt>对于post请求最开始的controller里就该写成<strong>@PostMapping</strong>，这样不会在开始程序的时候找不到他的界面。</p><p><strong>tomcat</strong>的配置和使用，部署到服务器，又是一个艰巨的工程了。安装目录下有一个RUNNING.txt文件夹，额，官方解释，就是没看完，反正我卡了老久，现在还报着500的错…对Tomcat的使用日后再更咯。顶不住。</p><p><strong>springboot freemaker</strong>比较舒服的一份文档<strong><a href="http://freemarker.foofun.cn/" target="_blank" rel="noopener">http://freemarker.foofun.cn/</a></strong>。FreeMarker 是一款 模板引擎： 即一种基于模板和要改变的数据， 并用来生成输出文本(HTML网页，电子邮件，配置文件，源代码等)的通用工具。 一个java类库。</p><p><img src="/2020/03/29/springboot3-0/27.png" alt><br><img src="/2020/03/29/springboot3-0/28.png" alt><br><strong>插入一个数据</strong></p><p><img src="/2020/03/29/springboot3-0/629.png" alt><img src="/2020/03/29/springboot3-0/30.png" alt></p><p><strong><a href="http://localhost:8080/user.html" target="_blank" rel="noopener">http://localhost:8080/user.html</a></strong>（部署好之后会更新的..</p>]]></content>
    
    
    <categories>
      
      <category>Springboot</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Maven</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>IDEA+MyBatis整合操作MySQL</title>
    <link href="/2020/03/22/springboot2-0/"/>
    <url>/2020/03/22/springboot2-0/</url>
    
    <content type="html"><![CDATA[<p>尝试系统和细节的使用springboot的第二步</p><h1 id="2020-03-22"><a href="#2020-03-22" class="headerlink" title="2020 03-22"></a>2020 03-22</h1><hr><p>本次操作所需材料：<br>*IDEA旗舰版<br>*Phpstudy集成环境中的MySQL8.0.12<br>*Navicat Premium 12</p><p><strong>目录结构</strong></p><p>生成的项目中，resources文件夹下，static文件下放静态文件（css，js，html和图片），templates下存放controller默认访问的html文件。<br>6.pom.xml是为了添加依赖，application.propertiese文件是resources中自动生成的，配置数据信息。</p><p>spring.datasource.username=数据库的用户名<br>spring.datasource.password=数据库登录密码<br>spring.datasource.url=jdbc:mysql://localhost:3306/数据库名称<br>spring.jpa.hibernate.ddl-auto=create</p><p><strong>连接数据库</strong></p><p>打开集成环境的MySQL8.0.12，在cmd中输入mysql -uroot -p,回车，输入密码。连接成功<img src="/2020/03/22/springboot2-0/login.png" alt></p><p>容易遇到报错，在idea中连接数据库database失败：<br>Server returns invalid timezone. Go to ‘Advanced’ tab and set ‘serverTimezone’ property manually.是时区错误问题。mysql默认的是Utc时区，比北京时间晚八个小时。cmd命令行的拯救措施：<img src="/2020/03/22/springboot2-0/test.png" alt></p><p>之后连接成功</p><p><img src="/2020/03/22/springboot2-0/success.png" alt></p><p><strong>创建表单</strong></p><p>连接数据库后创建表单，可以不用sql语句，直接创建表，记得选定主键。<img src="/2020/03/22/springboot2-0/table.png" alt><br>此处插入一句废话，我每次创建springboot的时候也不知道是为什么会出现@SpringBootApplication此注解爆红的情况，似乎是pom文件夹里starter版本不合导致的，所以2.2.5修改成2.2.2。在官网查询到了他的官方导入。<img src="/2020/03/22/springboot2-0/dao.png" alt><br>此刻即完成了建表的工作。</p><p>可以打开cmd和navicat测试一下是否统一更新。</p><p><img src="/2020/03/22/springboot2-0/1.png" alt></p><p>如图：<br><img src="/2020/03/22/springboot2-0/2.png" alt></p><p>管理schemas的操作：</p><p><img src="/2020/03/22/springboot2-0/5.png" alt></p><p>创建表单也可以直接cmd命令行进行操作，就是过程较为繁琐，需要掌握MySQL的常用语句，但有个很大的好处是直接连接进入工程项目。不用重新连接database。也是为了避免时差的好方法。<img src="/2020/03/22/springboot2-0/4.png" alt></p><p><strong>源文件编写</strong></p><p>写在之前：在resources—&gt;application.properties-&gt;添加连接池，配置数据库的基本信息。</p><p>一般包括dao层，controller层，service层，entity层。</p><p>（1）dao层存放接口。全称为data access object，，接入数据库，一些对数据库的操作。写入接口中的方法都是void方法。</p><p>（2）controller层存放控制台和前端界面的接口，这是项目中前后端交互的实际接口与dao层的接口（interface）不一样。controller层加入注解@RestController。</p><p>（3）entity层放入实体类，就是把对一个表的操作写在一个类里，通常属性是private。</p><p>1.存放接口，添加注解引入对数据库的操作。@mapper放在类之前方便扫描包。注解<strong>@Select</strong>，选择查询功能，<strong>@Update</strong>修改功能，<strong>@Insert</strong>插入增加功能，<strong>@Delete</strong>删除功能，<strong>Result</strong>用来与数据库的列名的，如果一样可以忽略。这是看同学CSDN发现的新功能….</p><p>之前创建项目时漏选了依赖MyBatis，导致后续操作很麻烦。不过正好通过MyBatis的官网学到了些东西：<strong><a href="https://mybatis.org/mybatis-3/zh/statement-builders.html" target="_blank" rel="noopener">https://mybatis.org/mybatis-3/zh/statement-builders.html</a></strong></p><p>2.此层创建的是类，<strong>@GetMapping</strong>的用法：是<strong>@RequestMapping(method = RequestMethod.GET)</strong>的缩写。该注解将HTTP Get映射到特定的处理方法上。<strong>@Controller</strong>处理http请求，<strong>@RestController</strong>是@Controller和@ResponseBody的组合体，返回字符串和json数据。<strong>@RequestMapping</strong>配置Url映射，<strong>@PathVariable</strong>获取Url中的数据，<strong>@RequestParam</strong>获取请求参数的值。</p><p>此层开始会使用<strong>@Autowried</strong>，private UserMapper usermapper；操作接口，请求路径。<img src="/2020/03/22/springboot2-0/8.png" alt></p><p>3.创建实体类，还有个黑魔法的操作。Alt+insert，getter and setter ，Ctrl按住全选，ok—&gt;生成所有，操作方便舒服。强推。<img src="/2020/03/22/springboot2-0/3.png" alt></p><p>..今天先到这里了..</p><p>好了，这是3.28续更的。前几天都快被哽死了。</p><p>是这样，在多次springboot启动失败之后，找到了根源问题。本来是个入门任务被我想得太复杂了。springboot创建时选择依赖并不是越多越好。thymeleaf和security是多余选择的pom。为这事儿太惨了。security里自带了登录拦截器，所以每次打开就这样了。<img src="/2020/03/22/springboot2-0/7.png" alt></p><p>去掉security之后运行成功，<img src="/2020/03/22/springboot2-0/6.png" alt>,时间紧促已经到了ddl，所以连toString方法都没有覆写就交作业了。</p><p>这篇blog不贴源码了，因为气急败坏之下贴了dalao的码，单纯记录一下这次的贪心之失。</p>]]></content>
    
    
    <categories>
      
      <category>Springboot</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Mysql</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>IDEA+Springboot输出Hello World</title>
    <link href="/2020/03/17/springboot1-0/"/>
    <url>/2020/03/17/springboot1-0/</url>
    
    <content type="html"><![CDATA[<p>尝试系统和细节的使用springboot的第一步</p><h1 id="2020-03-17"><a href="#2020-03-17" class="headerlink" title="2020 03-17"></a>2020 03-17</h1><hr><p>本次操作所需材料：<br>*IDEA旗舰版(简单上手…</p><p><strong>IDEA</strong>神奇创建springboot项目，史上无敌讨厌的就是导包了。所以给各位摸到了一个自动导包的好方法。</p><p>1.首先File-&gt;new-&gt;moudle,你会看到一个这亚子的界面<img src="/2020/03/17/springboot1-0/10.png" alt="avatar"></p><p>2.然后正常下一步<img src="/2020/03/17/springboot1-0/11.png" alt="avatar"></p><p>3.选择依赖，当然这可能是我初学一个很困扰的点，每次都不知道该选啥。<br>,界面比较简单，就web就好了。<img src="/2020/03/17/springboot1-0/12.png" alt="avatar"></p><p>4.然后我导包…嗯或许是版本跟不上的原因，也有time out这样的情况，所以<img src="/2020/03/17/springboot1-0/dao.png" alt="avatar"></p><p>5.导入maven依赖，这个也很强，添加了阿里镜像。首先<img src="/2020/03/17/springboot1-0/13.png" alt="avatar">，紧接着<img src="/2020/03/17/springboot1-0/14.png" alt="avatar">省事儿许多。</p><p>6.害，这个时候就加上一段代码是吧，毕竟瞟到springboot的官方文档也是这亚子交你写hello world的。<img src="/2020/03/17/springboot1-0/15.png" alt="avatar"></p><p>7.run一把梭，就输出了。<img src="/2020/03/17/springboot1-0/hello.jpg" alt="avatar"></p><hr><p>对<strong>maven</strong>的学习放到第三部分了。日后慢更。</p><p><strong>scrapy</strong>系列在缓慢进行中,估计是很慢了….未完待续</p>]]></content>
    
    
    <categories>
      
      <category>Springboot</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>First</title>
    <link href="/2019/11/24/first/"/>
    <url>/2019/11/24/first/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2019/11/24/hello-world/"/>
    <url>/2019/11/24/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
